expose main() u8 {
    assert --5 == 5;
    assert -1 != 255;
    assert -5 < 10;
    assert -1 < 200;

    assert 1 + 2 == 3;
    assert 0 - 5 == -5;
    assert 1 + 2 + 3 == 6;
    assert 5 - 2 == 3;
    assert 10 - 5 - 2 == 3;
    assert 10 - (5 - 2) == 7;
    assert 5 - -5 == 10;
    
    assert 2 * 2 == 4;
    assert 4 + 2 * 2 == 8;
    assert (4 + 2) * 2 == 12;
    assert 5 * -1 == -5;

    assert_type 10 % 3 = 0..2;
    assert_type 3 % 100 = 3..3;

    let x: 2..5 = 4;
    assert_type x % 3 = 0..2;
    assert_type x % 10 = 2..5;

    assert 4 // 2 == 2;
    assert 10 // 3 == 3;
    assert 10 % 3 == 1;

    assert -10 // 2 == -5;
    assert 10 // -2 == -5;
    assert -10 // -2 == 5;
    assert -10 % 3 == -1;
    assert 10 % -3 == 1;
    assert -10 % -3 == -1;

    assert 5 -> 0..10 == 5;
    assert 15 -> 0..10 == 10;
    assert_type 20 -> 0..10 = 0..10;

    assert 4 & 3 == 0;
    assert 5 & 3 == 1;

    let x: u8 = 0;
    let y: u8 = 0;
    assert_type x & y = u8;
    assert_type x & 4 = 0..4;

    assert 1 | 2 == 3;
    assert_type 1 | 2 = 2..3;
    assert_type 2 | 10 = 10..15;

    return 300 - 300;
}
